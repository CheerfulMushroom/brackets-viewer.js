!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(1);const s=n(2);window.bracketsViewer=new class{constructor(){this.teamRefsDOM={}}render(e){const t=$("#root");if(0===t.length)throw Error('Root not found. You must have a root element with id "root"');switch(e.stage.type){case"round_robin":this.renderRoundRobin(t,e);break;case"single_elimination":case"double_elimination":this.renderElimination(t,e);break;default:throw Error("Unknown bracket type: "+e.stage.type)}}renderRoundRobin(e,t){t.participants.map(e=>this.teamRefsDOM[e.id]=[]),this.participants=t.participants;const n=$('<div class="round-robin">');let r=1;for(const e of s.splitBy(t.matches,"group_id")){const t=$('<div class="group">').append($("<h2>").text("Group "+r++));let o=1;for(const n of s.splitBy(e,"round_id")){const e=$("<div>").append($("<h3>").text("Round "+o));for(const t of n)e.append(this.renderMatch(t));t.append(e),o++}t.append(this.renderTable(e)),n.append(t)}e.append($("<h1>").text(t.stage.name)),e.append(n)}renderTable(e){const t=s.getRanking(e),n=$("<table>"),r=$("<tr>");for(const e in t[0])r.append($("<th>").text(s.rankingHeader(e)));n.append(r);for(const e of t){const t=$("<tr>");for(const t in e){let s=e[t];if("id"===t){const e=this.participants.find(e=>e.id===s);void 0!==e&&(s=e.name)}n.append($("<td>").text(s))}n.append(t)}return n}renderElimination(e,t){t.participants.map(e=>this.teamRefsDOM[e.id]=[]);const n=s.splitBy(t.matches,"group_id");if(this.participants=t.participants,e.append($("<h1>").text(t.stage.name)),"single_elimination"===t.stage.type){const t=!!n[1];this.renderGroup(e,s.splitBy(n[0],"round_id"),e=>"Round "+e),t&&this.renderFinal("consolation_final",n[1])}else if("double_elimination"===t.stage.type){const t=!!n[2];this.renderGroup(e,s.splitBy(n[0],"round_id"),e=>"WB Round "+e,!1,t),this.renderGroup(e,s.splitBy(n[1],"round_id"),e=>"LB Round "+e,!0),t&&this.renderFinal("grand_final",n[2])}}renderGroup(e,t,n,s,r){const o=$('<div class="bracket">');let i=1;for(const e of t){const a=$('<div class="round">').append($("<h3>").text(n(i)));for(const n of e){let e;e=s?{connectPrevious:i>1&&(i%2==1?"square":"straight"),connectNext:i<t.length&&(i%2==0?"square":"straight")}:{connectPrevious:i>1&&"square",connectNext:i<t.length?"square":!!r&&"straight"},a.append(this.renderMatch(n,e))}o.append(a),i++}e.append(o)}renderFinal(e,t){const n=$(".bracket").eq(0),s=1===t.length?()=>"Grand Final":e=>"Grand Final R"+(e+1);for(let r=0;r<t.length;r++){const o=this.renderMatch(t[r],{connectPrevious:"grand_final"===e&&0===r&&"straight",connectNext:2===t.length&&0===r&&"straight"}),i=$('<div class="round">').append($("<h3>").text("grand_final"===e?s(r):"Consolation Final"));i.append(o),n.append(i)}}renderMatch(e,t){const n=this.renderTeam(e.opponent1),s=this.renderTeam(e.opponent2),r=$('<div class="teams">').append(n).append(s),o=$('<div class="match">').append(r);return t?(t.connectPrevious&&r.addClass("connect-previous"),t.connectNext&&o.addClass("connect-next"),"straight"===t.connectPrevious&&r.addClass("straight"),"straight"===t.connectNext&&o.addClass("straight"),o):o}renderTeam(e){const t=$('<div class="team">'),n=$('<div class="name">'),s=$('<div class="score">');if(null===e)n.text("BYE");else{const t=this.participants.find(t=>t.id===e.id);n.text(void 0===t?"TBD":t.name),s.text(void 0===e.score?"-":e.score),e.result&&"win"===e.result&&(n.addClass("win"),s.addClass("win")),e.result&&"loss"===e.result&&(n.addClass("loss"),s.addClass("loss"))}if(t.append(n).append(s),e&&null!==e.id){const n=e.id;this.teamRefsDOM[n].push(t.get(0)),t.hover(()=>$(this.teamRefsDOM[n]).addClass("hover"),()=>$(this.teamRefsDOM[n]).removeClass("hover"))}return t}}},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRanking=t.rankingHeader=t.splitBy=void 0,t.splitBy=function(e,t){const n=Object();for(const s of e)n[s[t]]||(n[s[t]]=[]),n[s[t]].push(s);return Object.values(n)};const s={rank:"#",id:"Name",played:"P",wins:"W",draws:"D",losses:"L",forfeits:"F",scoreFor:"SF",scoreAgainst:"SA",scoreDifference:"+/-",points:"Pts"};t.rankingHeader=function(e){return s[e]},t.getRanking=function(e,t){const n={};function s(e,s){if(!e||null===e.id)return;const r=n[e.id]||{rank:0,id:0,played:0,wins:0,draws:0,losses:0,forfeits:0,scoreFor:0,scoreAgainst:0,scoreDifference:0,points:0};r.id=e.id,r.played++,"win"===e.result&&r.wins++,"draw"===e.result&&r.draws++,"loss"===e.result&&r.losses++,e.forfeit&&r.forfeits++,r.scoreFor+=e.score||0,r.scoreAgainst+=s&&s.score||0,r.scoreDifference=r.scoreFor-r.scoreAgainst;const o=t||(e=>3*e.wins+1*e.draws+0*e.losses);r.points=o(r),n[e.id]=r}for(const t of e)s(t.opponent1,t.opponent2),s(t.opponent2,t.opponent1);const r=Object.values(n).sort((e,t)=>t.points-e.points);let o={value:0,lastPoints:-1};for(const e of r)e.rank=o.lastPoints!==e.points?++o.value:o.value,o.lastPoints=e.points;return r}}]);