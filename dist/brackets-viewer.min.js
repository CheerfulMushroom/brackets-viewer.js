!function(n){var e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(o,r,function(e){return n[e]}.bind(null,r));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),t(1);const o={};let r;function c(n,e){const t=d(n.opponent1),o=d(n.opponent2),r=$('<div class="teams">').append(t).append(o),c=$('<div class="match">').append(r);return e&&e.connectPrevious&&r.addClass("connect-previous"),e&&e.connectNext&&c.addClass("connect-next"),c}function d(n){const e=$('<div class="team">'),t=$('<div class="name">'),c=$('<div class="score">');if(null===n)t.text("BYE");else{const e=r.find(e=>e.id===n.id);t.text(void 0===e?"TBD":e.name),c.text(n.score||""),n.result&&"win"===n.result&&(t.addClass("win"),c.addClass("win"))}if(e.append(t).append(c),n&&null!==n.id){const t=n.id;o[t].push(e.get(0)),e.hover(()=>$(o[t]).addClass("hover"),()=>$(o[t]).removeClass("hover"))}return e}function i(n,e){const t=Object();for(const o of n)t[o[e]]||(t[o[e]]=[]),t[o[e]].push(o);return Object.values(t)}window.bracketsViewer={render:(n,e)=>{const t=$(".tournament");if(0===t.length)throw Error('Root not found. You must have a root element with class ".tournament"');switch(n.type){case"double_elimination":!function(n,e,t){t.participant.map(n=>o[n.id]=[]);const d=i(t.match,"group_id");r=t.participant,n.append($("<h1>").text(e.name)),function(n,e,t){const o=$('<div class="winner bracket">'),r=i(t,"round_id");for(const n of r){const t=e.find(e=>e.id===n[0].round_id);if(!t)throw Error("Round not found.");const r=$('<div class="round">').append($("<h2>").text("WB Round "+t.number));for(const e of n)r.append(c(e,{connectPrevious:t.number>1,connectNext:!0}));o.append(r)}n.append(o)}(n,t.round,d[0]),function(n,e,t){const o=$('<div class="loser bracket">'),r=i(t,"round_id");for(const n of r){const t=e.find(e=>e.id===n[0].round_id);if(!t)throw Error("Round not found.");const d=$('<div class="round">').append($("<h2>").text("LB Round "+t.number));for(const e of n)d.append(c(e,{connectPrevious:t.number>1,connectNext:t.number<r.length}));o.append(d)}n.append(o)}(n,t.round,d[1]),function(n){const e=c(n,{connectPrevious:!0,connectNext:!1}),t=$('<div class="round">').append($("<h2>").text("Grand Final"));t.append(e),$(".winner.bracket").append(t)}(d[2][0])}(t,n,e);break;default:throw Error("Unknown bracket type: "+n.type)}}}},function(n,e,t){}]);